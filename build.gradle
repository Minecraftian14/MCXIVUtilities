import javax.swing.Spring

apply plugin: 'java'
apply plugin: 'maven-publish'

group 'in.mcxiv'
version '0.1'

sourceSets {
    args
    collections
    images
    io
    math
    mathGen
    miscellaneous
    string
}

sourceSets.forEach(set -> {
    if (set.name != 'main' && set.name != 'test' && !set.name.endsWith('Gen')) {
        def jarTask = task("${set.name}Jar", type: Jar) {
            classifier("$set.name")

            destinationDirectory.set(file(archiveFileName.get()))
//            getDestinationDirectory().set(file(""))
//            System.out.println(archiveFileName.get())


            System.out.println("output=" + getDestinationDirectory().get().asFile.absolutePath)
            from set.output
        }

        afterEvaluate {
            publishing {
                publications {
                    "$set.name"(MavenPublication) {
                        System.out.println(name);
                        from components.java

                        groupId = project.group
                        artifactId = "$set.name"
                        version = project.version
                        artifact(jarTask)
                    }
                }
            }
        }

        dependencies {
            testImplementation set.output
        }
    }

    if (set.name.endsWith('Gen')) {
        set.resources.srcDirs += set.java.srcDirs
        def jarRunTask = task("${set.name}GenJarRunner", type: JavaExec) {
            classpath = set.runtimeClasspath
            mainClass = 'in.mcxiv.math.gen.MainGenerator'
        }

        // running it via jitpack doesnt allow it to access/add/modify sources
//        classes.dependsOn(jarRunTask)
    }
})

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

